version: '3.8'

services:
  wot-relay:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: wot-relay
    restart: unless-stopped
    ports:
      - "3334:3334"
    env_file:
      - .env
    
    volumes:
      - "./db:/app/db"
      - "./templates/index.html:${INDEX_PATH}"
      - "./templates/static:${STATIC_PATH}"
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3334/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    labels:
      - "autoheal=true"
    
    networks:
      - wot-network

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    container_name: wot-relay-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - wot-relay
    labels:
      - "autoheal=true"
    networks:
      - wot-network
    profiles:
      - with-nginx

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: wot-relay-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    labels:
      - "autoheal=true"
    networks:
      - wot-network
    profiles:
      - with-monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: wot-relay-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    labels:
      - "autoheal=true"
    networks:
      - wot-network
    profiles:
      - with-monitoring

  # Autoheal for health monitoring and restarting unhealthy containers
  autoheal:
    image: willfarrell/autoheal:latest
    container_name: wot-relay-autoheal
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_INTERVAL=${AUTOHEAL_INTERVAL:-5}
      - AUTOHEAL_START_PERIOD=${AUTOHEAL_START_PERIOD:-0}
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=${AUTOHEAL_DEFAULT_STOP_TIMEOUT:-10}
    networks:
      - wot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Tor proxy for anonymous access
  tor:
    image: dperson/torproxy
    container_name: wot-relay-tor
    volumes:
      - ../tor-data:/var/lib/tor
    command: >
      -s "80;relay:3334"
    restart: unless-stopped
    mem_limit: 3.5g
    memswap_limit: 4g
    labels:
      - "autoheal=true"
    networks:
      - wot-network
    profiles:
      - with-tor

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  wot-network:
    driver: bridge
